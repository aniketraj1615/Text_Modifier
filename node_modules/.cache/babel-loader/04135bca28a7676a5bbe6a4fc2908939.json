{"ast":null,"code":"import _slicedToArray from \"/home/aniket/Desktop/web_projects/React/open_react/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/aniket/Desktop/web_projects/React/open_react/my-app/src/App.js\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport Textutiles from \"./Components/Textutiles\";\nimport Aboutpage from \"./Components/Aboutpage\";\nimport Alert from \"./Components/Alert\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nfunction App() {\n  var _useState = useState(\"light\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    Mode = _useState2[0],\n    setMode = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    alert = _useState4[0],\n    setAlert = _useState4[1];\n  var showAlert = function showAlert(message, type) {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(function () {\n      setAlert(null);\n    }, 2000);\n  };\n  var toggleMode = function toggleMode() {\n    if (Mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#9a9a9a\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    element: /*#__PURE__*/React.createElement(LandingPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 42\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/Aboutpage\",\n    element: /*#__PURE__*/React.createElement(Aboutpage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 51\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Navbar, {\n    title: \"TextHelp\",\n    mode: Mode,\n    toggleMode: toggleMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Alert, {\n    alert: alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Aboutpage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n}\nexport default App;","map":{"version":3,"names":["Navbar","Textutiles","Aboutpage","Alert","React","useState","BrowserRouter","Routes","Route","App","_useState","_useState2","_slicedToArray","Mode","setMode","_useState3","_useState4","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","element","LandingPage","title","mode"],"sources":["/home/aniket/Desktop/web_projects/React/open_react/my-app/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport Textutiles from \"./Components/Textutiles\";\nimport Aboutpage from \"./Components/Aboutpage\";\nimport Alert from \"./Components/Alert\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [Mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const toggleMode = () => {\n    if (Mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#9a9a9a\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      <BrowserRouter>\n        <Routes>\n          <Route exact path=\"/\" element={<LandingPage />} />\n\n          <Route exact path=\"/Aboutpage\" element={<Aboutpage />} />\n          {/* <Route exact path=\"/Doctor\" element={<Doctor />} />\n          <Route exact path=\"/Buy\" element={<Buy />} /> */}\n        </Routes>\n      </BrowserRouter>\n      <Navbar title={\"TextHelp\"} mode={Mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      {/* <div className=\"container\">\n          \n              <Textutiles heading={\"Enter your text here\"} />\n            \n            \n        </div> */}\n      <Aboutpage />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}